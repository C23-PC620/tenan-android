plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.8.21'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
}

android {
    namespace 'com.tenan.android'
    compileSdk 33

    defaultConfig {
        applicationId "com.tenan.android"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        def releaseApiUrl = properties.getProperty("RELEASE_API_URL")
        def debugApiUrl = properties.getProperty("DEBUG_API_URL")
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "BASE_API_URL", "\"${releaseApiUrl}\"")
        }
        debug {
            buildConfigField("String", "BASE_API_URL", "\"${debugApiUrl}\"")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        buildConfig true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion rootProject.androidx_compose_compiler_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    // kotlin
    implementation platform("org.jetbrains.kotlin:kotlin-bom:$kotlin_bom_version")
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlinx_serialization_json_version"

    // androidx common
    implementation "androidx.activity:activity-compose:$androidx_activity_compose_version"
    implementation "androidx.core:core-ktx:$androidx_core_ktx_version"
    implementation "androidx.core:core-splashscreen:$androidx_splashscreen_version"
    implementation "androidx.hilt:hilt-navigation-compose:$androidx_hilt_navigation_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$androidx_lifecycle_runtime_ktx_version"
    implementation "androidx.navigation:navigation-compose:$androidx_navigation_version"

    // androidx compose
    implementation platform("androidx.compose:compose-bom:$androidx_compose_bom_version")
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.compose.material:material-icons-extended'

    // androidx room
    implementation "androidx.room:room-runtime:$androidx_room_version"
    kapt "androidx.room:room-compiler:$androidx_room_version"
    implementation "androidx.room:room-ktx:$androidx_room_version"

    // coil
    implementation "io.coil-kt:coil-compose:$coil_compose_version"

    // google hilt
    implementation "com.google.dagger:hilt-android:$google_hilt_version"
    kapt "com.google.dagger:hilt-compiler:$google_hilt_version"

    // networking
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_logging_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"

    // other
    implementation "com.jakewharton.timber:timber:$timber_version"
    implementation "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:$retrofit_kotlinx_serialization_version"

    // testing
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$androidx_test_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidx_test_espresso_version"
    androidTestImplementation platform("androidx.compose:compose-bom:$androidx_compose_bom_version")
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
}